openapi: 3.0.1
info:
  title: Spyc AR API
  description: Monadic ARQ project documentation
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@monadic.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 2.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://7lp0pryt60.execute-api.us-east-1.amazonaws.com/dev'
  - url: 'http://localhost:5000'
paths:
  '/auth/signup':
    post:
      security: []
      tags:
        - Auth
      summary: Signup
      description: Signup
      operationId: signup
      requestBody:
        description: Sign up the user and get the token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  '/auth/signup/v2':
    post:
      security: []
      tags:
        - Auth
      summary: Signup validate email auto verified user and email
      description: Signup validate email auto verified user and email
      operationId: signupV2
      requestBody:
        description: Sign up the user and get the token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        '200':
          description: User signed in
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
        '5XX':
          description: Unexpected error.
                    
      x-codegen-request-body-name: body
  '/auth/login':
    post:
      security: []
      tags:
        - Auth
      summary: Login
      description: Login
      operationId: login
      requestBody:
        description: Login the user and get the token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success login
      x-codegen-request-body-name: body
  '/auth/refresh/token':
    post:
      tags:
        - Auth
      summary: Refresh token
      description: Refresh token
      operationId: refreshToken
      requestBody:
        description: Refresh token the user and get new token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success refresh token
      x-codegen-request-body-name: body
  '/auth/forgot/password':
    post:
      tags:
        - Auth
      summary: Forgot password
      description: Forgot password
      operationId: forgotPassword
      requestBody:
        description: Sent code for recovery pasword
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success sent code
      x-codegen-request-body-name: body
  '/auth/forgot/password/confirm':
    post:
      tags:
        - Auth
      summary: Forgot password confirm
      description: Forgot password confirm
      operationId: forgotPasswordConfirm
      requestBody:
        description: Forgot password confirm
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordConfirm'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success forgot password confirm
      x-codegen-request-body-name: body
  '/auth/change/password/':
    post:
      tags:
        - Auth
      summary: Change password user
      description: Change password user
      operationId: changePasswordUser
      security:
        - AccessToken: []
      requestBody:
        description: Change password user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success change password
      x-codegen-request-body-name: body
  '/auth/resend/confirm/code/':
    post:
      tags:
        - Auth
      summary: Resend confirm code
      description: Resend Confirm Code
      operationId: resendConfirmCode
      requestBody:
        description: Resend code password confirm
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resendConfirmCode'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success resend code
      x-codegen-request-body-name: body
  # CREATION
  '/creation':
    get:
      tags:
        - Creation
      summary: Show all creations
      description: Show all creations
      operationId: creation
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
    post:
      tags:
        - Creation
      summary: Create creations
      description: Creatation creations
      operationId: creationStore
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreation'
        required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
  '/creation/upload/video':
    post:
      servers:
        - url: https://cryptic-eyrie-32793.herokuapp.com
      tags:
        - Creation
      summary: Upload video preview
      description: Upload video preview to S3
      operationId: creationUploadVideo
      security:
        - AccessToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreationUploadVideo'
      responses:
        '405':
          description: Invalid input
        '400':
          description: Error upload video into bucket S3
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
  '/creation/{creationId}/upload/file/content/{messageId}':
    post:
      servers:
        - url: https://cryptic-eyrie-32793.herokuapp.com
      tags:
        - Creation
      summary: Upload file content
      description: Upload file content to S3
      operationId: creationUploadFileContent
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
        - in: path
          name: messageId
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '405':
          description: Invalid input
        '400':
          description: Error upload file content into bucket S3
        '200':
          description: Success upload file content creation
  # PROFILE
  '/profile/user':
    get:
      tags:
        - Profile
      summary: Get profile info user
      description: Get profile infor user by access token
      operationId: profileUser
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show profile
      x-codegen-request-body-name: body
  '/profile/upload/photo':
    post:
      servers:
        - url: https://cryptic-eyrie-32793.herokuapp.com
      tags:
        - Profile
      summary: Upload photo profile
      description: Upload photo profile to S3
      operationId: profileUploadPhoto
      security:
        - AccessToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileUploadPhoto'
      responses:
        '405':
          description: Invalid input
        '400':
          description: Error upload photo into bucket S3
        '200':
          description: Success upload photo
  # DEVICE
  '/device/token':
    post:
      tags:
        - Device
      summary: Store device token
      description: Store device token
      operationId: deviceToken
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDeviceToken'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success store token
      x-codegen-request-body-name: body
  # COMMENT
  '/comments':
    get:
      tags:
        - Comments
      summary: Get all comments
      description: Get all comments
      operationId: comment
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show comments
      x-codegen-request-body-name: body
  '/comments/{creationId}':
    get:
      tags:
        - Comments
      summary: Get creation comments
      description: Get cretion comments
      operationId: getCreationComments
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show comments
      x-codegen-request-body-name: body
    post:
      tags:
        - Comments
      summary: Store comment
      description: Store comment
      operationId: commentStore
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success created child comment
      x-codegen-request-body-name: body
  '/comments/{commentId}':
    put:
      tags:
        - Comments
      summary: Update comment
      description: Update comment
      operationId: commentUpdate
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success created child comment
      x-codegen-request-body-name: body
  '/comments/{commentId}/child':
    post:
      tags:
        - Comments
      summary: Store child comment
      description: Store child comment
      operationId: commentChildStore
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success created child comment
      x-codegen-request-body-name: body
  '/{commentId}/child/{commentChildId}':
    put:
      tags:
        - Comments
      summary: Update child comment
      description: Update child comment
      operationId: commentChildUpdate
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
        - in: path
          name: commentChildId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success Update child comment
      x-codegen-request-body-name: body
  # USER
  '/user':
    delete:
      tags:
        - User
      summary: Delete user
      description: Delete user
      operationId: deleteUser
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUser'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success delete user
      x-codegen-request-body-name: body
components:
  schemas:
    # Signup Schema
    Signup:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
    # End Signup Schema
    # Login Schema
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    # End Login Schema
    # Refresh token Schema
    RefreshToken:
      type: object
      properties:
        email:
          type: string
        refreshToken:
          type: string
    # End Refresh token Schema
    # ForgotPassword Schema
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
    # End ForgotPassword Schema
     # ForgotPasswordConfirm Schema
    ForgotPasswordConfirm:
      type: object
      properties:
        email:
          type: string
        verificationCode:
          type: string
        newPassword:
          type: string
    # End ForgotPasswordConfirm Schema
    # ForgotPassword Schema
    ChangePassword:
      type: object
      properties:
        password:
          type: string
        newPassword:
          type: string
    # End ForgotPassword Schema
    # resendCode Schema
    resendConfirmCode:
      type: object
      properties:
        email:
          type: string
    # End resendCode Schema
    # CreationUploadVideo Schema
    CreationUploadVideo:
      type: object
      properties:
        creationId:
          type: string
        video:
          type: string
          format: binary
    # End CreationUploadVideo Schema
    # DeleteUser Schema
    CreateCreation:
      type: object
      example:   # Object-level example
          {
        "TITLE": "VideoPreview",
        "USER_NAME": "Gandhi menas",
        "USER_IMAGE": "http://lorempixel.com/400/400/people/75",
        "USER_ID": "abc",
        "AUTHORIZED": [
          "sdf"
        ],
        "SEEN": 0,
        "LOCATION_TYPE": "confirmLocation",
        "DISTANCE": 0,
        "LOCATION": {
          "LATITUDE": 0,
          "LONGITUDE": 0
        },
        "LOCATION_SELECTED": "MY_LOCATION",
        "VISIBILITY_RANGE": "1000",
        "DATE_TIME": "21 Jan 2020 at 16:43:40",
        "TEXT_ADDRESS": "14–20 Aston Quay Temple Bar District Dublin Co. Dublin Dublin 2",
        "VIDEO_PREVIEW": {
          "MIMETYPE": "video/mp4",
          "LOCATION": "https://test-video-preview.s3.amazonaws.com/c042d552-298e-49c4-9946-d724e0183231.mp4",
          "SIZE": 38701154
        },
        "COMMENTS": 0,
        "PRIVACY_TYPE": "PUBLIC",
        "CONTENT": [
          {
            "SHIFT": {
              "X": 0,
              "Y": 0,
              "Z": 0
            },
            "COLOR": {
              "a": 0,
              "b": 0,
              "r": 0,
              "g": 0
            },
            "MESSAGE_TYPE_ID": "1_laugh",
            "MESSAGE_TYPE": "message",
            "SPATIAL_LOCATION_RELATIVE": {
              "X": 0,
              "Y": 0,
              "Z": 0
            },
            "SPATIAL_ORIENTATION": {
              "X": 0,
              "Y": 0,
              "Z": 0,
              "W": 0
            },
            "TEXT": "textDefault",
            "SPATIAL_LOCATION": {
              "LATITUDE": 0,
              "LONGITUDE": 0
            },
            "TEXT_FONT": "gfdsgbfvd",
            "DISTANCE_SHIFT": 0,
            "FRAME": {
              "X": 0,
              "Y": 0,
              "Z": 0
            },
            "URL": "https://"
          }
        ],
        "AUTHORIZATION": "YES",
        "LIKES": 1,
        "VIEWS": 0
      }
    # End DeleteUser Schema
    SignupResponse:
      type: array
      example:
        [
          {
            "code": 0,
            "status": "ERROR_INPUT",
            "description": "Bad validation body request"
          },
          {
            "code": 1,
            "status": "ERROR_SIGNUP_USER",
            "description": "Email already exists in DB"
          },
          {
            "code": 2,
            "status": "USER_NOT_CREATED_IN_DYNAMO",
            "description": "User could not be saved"
          },
          {
            "code": 3,
            "status": "UNABLE_TO_LOGIN",
            "description": "User created but unable to login"
          }
        ]
    # ProfileUploadPhoto Schema
    ProfileUploadPhoto:
      type: object
      properties:
        photo:
          type: string
          format: binary
    # End ProfileUploadPhoto Schema
    # StoreDeviceToken Schema
    StoreDeviceToken:
      type: object
      properties:
        token:
          type: string
    # End StoreDeviceToken Schema
    # DeleteUser Schema
    DeleteUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    # End DeleteUser Schema
  securitySchemes:
    AccessToken:
      type: apiKey
      in: header
      name: Authorization
