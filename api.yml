openapi: 3.0.1
info:
  title: Spyc AR API
  description: Monadic ARQ project documentation
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@monadic.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 2.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://7lp0pryt60.execute-api.us-east-1.amazonaws.com/dev'
  - url: 'http://localhost:5000'
paths:
  '/auth/signup':
    post:
      security: []
      tags:
        - Auth
      summary: Signup
      description: Signup
      operationId: signup
      deprecated: true
      requestBody:
        description: Sign up the user and get the token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  '/auth/signup/v2':
    post:
      security: []
      tags:
        - Auth
      summary: Signup validate email auto verified user and email
      description: Signup validate email auto verified user and email
      operationId: signupV2
      requestBody:
        description: Sign up the user and get the token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        '200':
          description: User signed in
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
      x-codegen-request-body-name: body
  '/auth/login':
    post:
      security: []
      tags:
        - Auth
      summary: Login
      description: Login
      operationId: login
      requestBody:
        description: Login the user and get the token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: Success login
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  '/auth/refresh/token':
    post:
      tags:
        - Auth
      summary: Refresh token
      description: Refresh token
      operationId: refreshToken
      requestBody:
        description: Refresh token the user and get new token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        required: true
      responses:
        '200':
          description: Success login
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
      x-codegen-request-body-name: body
  '/auth/forgot/password':
    post:
      tags:
        - Auth
      summary: Forgot password
      description: Forgot password
      operationId: forgotPassword
      requestBody:
        description: Sent code for recovery pasword
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      responses:
        '200':
          description: Success login
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
      x-codegen-request-body-name: body
  '/auth/forgot/password/confirm':
    post:
      tags:
        - Auth
      summary: Forgot password confirm
      description: Forgot password confirm
      operationId: forgotPasswordConfirm
      requestBody:
        description: Forgot password confirm
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordConfirm'
        required: true
      responses:
        '200':
          description: Success forgot password confirm
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordConfirmResponse'
      x-codegen-request-body-name: body
  '/auth/change/password/':
    post:
      tags:
        - Auth
      summary: Change password user
      description: Change password user
      operationId: changePasswordUser
      security:
        - AccessToken: []
      requestBody:
        description: Change password user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        '200':
          description: Success change password
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  '/auth/resend/confirm/code/':
    post:
      tags:
        - Auth
      summary: Resend confirm code
      description: Resend Confirm Code
      operationId: resendConfirmCode
      requestBody:
        description: Resend code password confirm
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resendConfirmCode'
        required: true
      responses:
        '200':
          description: Success resend code
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmCodeResponse'
      x-codegen-request-body-name: body
  # CREATION
  '/creation':
    get:
      tags:
        - Creation
      summary: Show all creations
      description: Show all creations
      operationId: creation
      security:
        - AccessToken: []
      deprecated: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
    post:
      tags:
        - Creation
      summary: Create creations
      description: Creatation creations
      operationId: creationStore
      deprecated: true
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreation'
        required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
  '/creation/sub':
    get:
      tags:
        - Creation
      summary: Show all creations by sub
      description: Show all creations by sub
      operationId: creationsSub
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
  ### CREATION V2 ######################
  '/creation/v2/':
    get:
      tags:
        - Creation
      summary: Show all creations
      description: Show all creations
      operationId: creationV2
      security:
        - AccessToken: []
      responses:
        '200':
          description: Get creations
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
      x-codegen-request-body-name: body
    post:
      tags:
        - Creation
      summary: Create creations
      description: Creatation creations
      operationId: creationStoreV2
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreationV2'
        required: true
      responses:
        '200':
          description: User signed in
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationStoreResponse'
      x-codegen-request-body-name: body
  '/creation/followers':
    get:
      tags:
        - Creation
      summary: Show all creations by followers
      description: Show all creations by followers
      operationId: creationFollowers
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: lastEvaluatedKeyFollow
          schema:
            type: string
        - in: query
          name: lastEvaluatedKeyCreation
          schema:
            type: string
      responses:
        '200':
          description: User signed in
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationStoreResponse'
      x-codegen-request-body-name: body
  # PROFILE
  '/profile/user':
    get:
      tags:
        - Profile
      summary: Get profile info user
      description: Get profile infor user by access token
      operationId: profileUser
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show profile
      x-codegen-request-body-name: body
  '/profile':
    put:
      tags:
        - Profile
      summary: Updated data user
      description: Updated data profile
      operationId: updatedProfileUser
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show profile
      x-codegen-request-body-name: body
  # LIKE
  '/like/{creationId}':
    get:
      tags:
        - Likes
      summary: Get likes of creation
      description: Get likes of creation
      operationId: getLikeCreation
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
    post:
      tags:
        - Likes
      summary: Like to creation
      description: Like to creation
      operationId: createLikeCreation
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/like/{id}/dismiss/{creationId}':
    delete:
      tags:
        - Likes
      summary: Delete like to creation
      description: Delete like to creation
      operationId: deleteLikeCreation
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
            description: id of like
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  # DEVICE
  '/device/token':
    post:
      tags:
        - Device
      summary: Store device token
      description: Store device token
      operationId: deviceToken
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDeviceToken'
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success store token
      x-codegen-request-body-name: body
  # COMMENT
  '/comments':
    get:
      tags:
        - Comments
      summary: Get all comments
      description: Get all comments
      operationId: comment
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show comments
      x-codegen-request-body-name: body
  '/comments/{creationId}':
    get:
      tags:
        - Comments
      summary: Get creation comments
      description: Get cretion comments
      operationId: getCreationComments
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '200':
          description: Success show comments
      x-codegen-request-body-name: body
    post:
      tags:
        - Comments
      summary: Store comment
      description: Store comment
      operationId: commentStore
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success created child comment
      x-codegen-request-body-name: body
  '/comments/{commentId}':
    put:
      tags:
        - Comments
      summary: Update comment
      description: Update comment
      operationId: commentUpdate
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success created child comment
      x-codegen-request-body-name: body
  '/comments/{commentId}/child':
    post:
      tags:
        - Comments
      summary: Store child comment
      description: Store child comment
      operationId: commentChildStore
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success created child comment
      x-codegen-request-body-name: body
  '/{commentId}/child/{commentChildId}':
    put:
      tags:
        - Comments
      summary: Update child comment
      description: Update child comment
      operationId: commentChildUpdate
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
        - in: path
          name: commentChildId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid access token or tokenId
        '201':
          description: Success Update child comment
      x-codegen-request-body-name: body
  # USER
  '/user':
    delete:
      tags:
        - User
      summary: Disabled user
      description: Disable user
      operationId: disabledUser
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success delete user
      x-codegen-request-body-name: body
  '/user/enable':
    post:
      tags:
        - User
      summary: Enable user
      description: Enable user
      operationId: enabledUser
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid input
        '201':
          description: Success delete user
      x-codegen-request-body-name: body
  '/user/search/email':
    get:
      tags:
        - User
      summary: Search user by email
      description: Search user by email
      operationId: searchUserEmail
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: Send email valid
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/user/search/username':
    get:
      tags:
        - User
      summary: Search user by username
      description: Search user by username
      operationId: searchUserUsername
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: username
          schema:
            type: string
          description: Username/Nickname
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/user/search/name':
    get:
      tags:
        - User
      summary: Search user by name/fullname
      description: Search user by name
      operationId: searchUserName
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: name or full name
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  # FOLLOW
  '/follow':
    get:
      tags:
        - Followers
      summary: Get follower list
      description: Get follower list
      operationId: getFollowList
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
    post:
      tags:
        - Followers
      summary: Create follow user
      description: Create follow user
      operationId: storeFollowUser
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sub:
                  type: string
                  description: Sub id
        required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/follow/me':
    get:
      tags:
        - Followers
      summary: Get follow me list
      description: Get follow me list
      operationId: getFollowMeList
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/follow/sub':
    get:
      tags:
        - Followers
      summary: Get follow list by sub
      description: Get follow list by sub
      operationId: getFollowListBySub
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: sub
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/follow/me/sub':
    get:
      tags:
        - Followers
      summary: Get follow me list by sub
      description: Get follow me list by sub
      operationId: getFollowMeListBySub
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: sub
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/follow/{id}/status':
    put:
      tags:
        - Followers
      summary: Change status follow
      description: Change status follow
      operationId: updateStatusFollowUser
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: in:blocked,removed,allowed
        required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  # VIEWS
  '/views/{creationId}':
    get:
      tags:
        - Views
      summary: Get views of creation
      description: Get views of creation
      operationId: getViewsCreation
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
    post:
      tags:
        - Views
      summary: View to creation
      description: View to creation
      operationId: createViewCreation
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  # Uploads
  '/upload/creation/v2/preview':
    post:
      servers:
        - url: https://spyar.herokuapp.com
      tags:
        - Uploads
      summary: Upload preview
      description: Upload preview to S3
      operationId: creationUploadVideoV2
      security:
        - AccessToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreationUploadVideo'
      responses:
        '200':
          description: User signed in
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationUploadVideoResponse'
      x-codegen-request-body-name: body
  '/upload/creation/video':
    post:
      servers:
        - url: https://spyar.herokuapp.com
      tags:
        - Uploads
      summary: Upload video
      description: Upload video to S3
      operationId: creationUploadVideo
      deprecated: true
      security:
        - AccessToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreationUploadVideo'
      responses:
        '405':
          description: Invalid input
        '400':
          description: Error upload video into bucket S3
        '200':
          description: Success show creations
      x-codegen-request-body-name: body
  '/upload/creation/{creationId}/file/content/{messageId}':
    post:
      servers:
        - url: https://spyar.herokuapp.com
      tags:
        - Uploads
      summary: Upload file content
      description: Upload file content to S3
      operationId: creationUploadFileContent
      security:
        - AccessToken: []
      deprecated: true
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
        - in: path
          name: messageId
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '405':
          description: Invalid input
        '400':
          description: Error upload file content into bucket S3
        '200':
          description: Success upload file content creation
  '/upload/creation/v2/{creationId}/file/content/{contentId}':
    post:
      servers:
        - url: https://spyar.herokuapp.com
      tags:
        - Uploads
      summary: Upload file content
      description: Upload file content to S3
      operationId: creationUploadFileContentV2
      security:
        - AccessToken: []
      parameters:
        - in: path
          name: creationId
          schema:
            type: string
          required: true
        - in: path
          name: contentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: User signed in
        '400':
          description: Error body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationUploadContentFileResponse'
  '/upload/profile/photo':
    post:
      servers:
        - url: https://spyar.herokuapp.com
      tags:
        - Uploads
      summary: Upload photo profile
      description: Upload photo profile to S3
      operationId: profileUploadPhoto
      security:
        - AccessToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileUploadPhoto'
      responses:
        '405':
          description: Invalid input
        '400':
          description: Error upload photo into bucket S3
        '200':
          description: Success upload photo
  '/notifications':
    get:
      tags:
        - Notifications
      summary: Get notifications by sub
      description: Get notifications by sub
      operationId: getNotificationsList
      security:
        - AccessToken: []
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/geolocation':
    post:
      tags:
        - Geolocation
      summary: Create geolocation
      description: Create geolocation
      operationId: creationCreationsGeolocation
      security:
        - AccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                longitude:
                  type: string
                latitude:
                  type: string
                creationId:
                  type: string
                country:
                  type: string
                capital:
                  type: string
        required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
  '/geolocation/creations':
    get:
      tags:
        - Geolocation
      summary: Get creations by location
      description: Get creations by location
      operationId: getCreationsGeolocation
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: latitude
          schema:
            type: string
          required: true
        - in: query
          name: longitude
          schema:
            type: string
          required: true
      responses:
        '405':
          description: Invalid input
        '200':
          description: Success
      x-codegen-request-body-name: body
components:
  schemas:
    # Signup Schema
    Signup:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
    # End Signup Schema
    # Login Schema
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    # End Login Schema
    # Refresh token Schema
    RefreshToken:
      type: object
      properties:
        email:
          type: string
        refreshToken:
          type: string
    # End Refresh token Schema
    # ForgotPassword Schema
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
      # End ForgotPassword Schema
      # ForgotPasswordConfirm Schema
    ForgotPasswordConfirm:
      type: object
      properties:
        email:
          type: string
        verificationCode:
          type: string
        newPassword:
          type: string
    # End ForgotPasswordConfirm Schema
    # ForgotPassword Schema
    ChangePassword:
      type: object
      properties:
        password:
          type: string
        newPassword:
          type: string
    # End ForgotPassword Schema
    # resendCode Schema
    resendConfirmCode:
      type: object
      properties:
        email:
          type: string
    # End resendCode Schema
    # CreationUploadVideo Schema
    CreationUploadVideo:
      type: object
      properties:
        creationId:
          type: string
        preview:
          type: string
          format: binary
    # End CreationUploadVideo Schema
    # DeleteUser Schema
    CreateCreation:
      type: object
      example:   # Object-level example
        {
          "TITLE": "VideoPreview",
          "USER_NAME": "Gandhi menas",
          "USER_IMAGE": "http://lorempixel.com/400/400/people/75",
          "USER_ID": "abc",
          "AUTHORIZED": [
            "sdf"
          ],
          "SEEN": 0,
          "LOCATION_TYPE": "confirmLocation",
          "DISTANCE": 0,
          "LOCATION": {
            "LATITUDE": 0,
            "LONGITUDE": 0
          },
          "LOCATION_SELECTED": "MY_LOCATION",
          "VISIBILITY_RANGE": "1000",
          "DATE_TIME": "21 Jan 2020 at 16:43:40",
          "TEXT_ADDRESS": "14–20 Aston Quay Temple Bar District Dublin Co. Dublin Dublin 2",
          "VIDEO_PREVIEW": {
            "MIMETYPE": "video/mp4",
            "LOCATION": "https://test-video-preview.s3.amazonaws.com/c042d552-298e-49c4-9946-d724e0183231.mp4",
            "SIZE": 38701154
          },
          "COMMENTS": 0,
          "PRIVACY_TYPE": "PUBLIC",
          "CONTENT": [
          {
            "SHIFT": {
              "X": 0,
              "Y": 0,
              "Z": 0
            },
            "COLOR": {
              "a": 0,
              "b": 0,
              "r": 0,
              "g": 0
            },
            "MESSAGE_TYPE_ID": "1_laugh",
            "MESSAGE_TYPE": "message",
            "SPATIAL_LOCATION_RELATIVE": {
              "X": 0,
              "Y": 0,
              "Z": 0
            },
            "SPATIAL_ORIENTATION": {
              "X": 0,
              "Y": 0,
              "Z": 0,
              "W": 0
            },
            "TEXT": "textDefault",
            "SPATIAL_LOCATION": {
              "LATITUDE": 0,
              "LONGITUDE": 0
            },
            "TEXT_FONT": "gfdsgbfvd",
            "DISTANCE_SHIFT": 0,
            "FRAME": {
              "X": 0,
              "Y": 0,
              "Z": 0
            },
            "URL": "https://"
          }
          ],
          "AUTHORIZATION": "YES",
          "LIKES": 1,
          "VIEWS": 0
        }
    # End DeleteUser Schema
    # ProfileUploadPhoto Schema
    ProfileUploadPhoto:
      type: object
      properties:
        photo:
          type: string
          format: binary
    # End ProfileUploadPhoto Schema
    # UpdateProfile Schema
    UpdateProfile:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        username:
          type: string
        birthdate:
          type: string
        phoneNumber:
          type: string
        gender:
          type: string
    # End UpdateProfile Schema
    # StoreDeviceToken Schema
    StoreDeviceToken:
      type: object
      properties:
        deviceToken:
          type: string
        os:
          type: string
        version:
          type: string
        status:
          type: string
    # End StoreDeviceToken Schema
    # StoreDeviceToken Schema
    CreateCreationV2:
      type: object
      properties:
        title:
          type: string
        locationType:
          type: string
        distance:
          type: string
        location:
          type: object
          properties:
            latitude:
              type: string
            longitude:
              type: string
        locationSelected:
          type: string
        privacyType:
          type: string
        dateTime:
          type: string
        textAddress:
          type: string
        content:
          type: array
          items:
            type: object
            properties:
              shift:
                type: object
              color:
                type: object
              contentId:
                type: string
              messageType:
                type: string
              spatialLocation:
                type: object
              spatialLocationRelative:
                type: object
              spatialOrientation:
                type: object
              text:
                type: string
              textFont:
                type: string
              distenceShift:
                type: integer
              frame:
                type: object
              fileUrl:
                type: string
    # End StoreDeviceToken Schema
    LoginResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_LOGIN",
          "description": "Bad credentials"
        }
        ]
    RefreshTokenResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_REFRESH_TOKEN",
          "description": "Error refreshing token"
        }
        ]
    ForgotPasswordResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_REFRESH_TOKEN",
          "description": "Error refreshing token"
        }
        ]
    ForgotPasswordConfirmResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_FORGOT_PASSWORD_CONFIRM",
          "description": "Error forgot password confirm"
        }
        ]
    ConfirmCodeResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_RESEND_CODE",
          "description": "Error resend code"
        }
        ]
    ChangePasswordResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_FAIL_CHANGE_PASSWORD",
          "description": "Error, fail change password"
        },
        {
          "code": 2,
          "status": "ERROR_CHANGE_PASSWORD",
          "description": "Error change password"
        }
        ]
    SignupResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_FORGOT_PASSWORD",
          "description": "Error forgot password"
        }
        ]
    CreationStoreResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_CREATE_CREATION",
          "description": "Error creating the creation"
        }
        ]
    CreationGetResponse:
      type: array
      example:
        [
        {
          "code": 1,
          "status": "ERROR_LIST_CREATIONS",
          "description": "Error getting the creations"
        }
        ]
    CreationUploadVideoResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_UPDATE_CREATION",
          "description": "Error updating the creation"
        }
        ]
    CreationUploadContentFileResponse:
      type: array
      example:
        [
        {
          "code": 0,
          "status": "ERROR_INPUT",
          "description": "Bad validation body request"
        },
        {
          "code": 1,
          "status": "ERROR_GETTING_CREATION",
          "description": "Error getting the creation"
        },
        {
          "code": 2,
          "status": "ERROR_PARSING_CREATION",
          "description": "Error parsing the creation"
        },
        {
          "code": 3,
          "status": "ERROR_UPDATE_CREATION",
          "description": "Error updating the creation"
        }
        ]
  securitySchemes:
    AccessToken:
      type: apiKey
      in: header
      name: Authorization
